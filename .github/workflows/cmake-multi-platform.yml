name: CMake Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:


jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            c_compiler: gcc
            cpp_compiler: g++
            build_type: Release
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            build_type: Release

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '5.15.2'

      - name: Create Build Directory
        run: mkdir build

      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} -DZLIB_TAG=develop -DMZ_FORCE_FETCH_LIBS=ON

      - name: Build with CMake
        run: cmake --build build --config ${{ matrix.build_type }}

      - name: Deploy (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo wget -O /tmp/cqtdeployer.deb https://github.com/QuasarApp/CQtDeployer/releases/download/v1.6.2351/CQtDeployer_1.6.2351.ec4840f_Linux_x86_64.deb
          sudo dpkg -i /tmp/cqtdeployer.deb
          cqtdeployer -bin ${{ github.workspace }}/build/SnakeQT -targetDir FileDistributionKit
        shell: bash

      - uses: actions/upload-artifact@v3
        if: runner.os == 'Linux'
        with:
          name: Linux_Files
          path: FileDistributionKit/*

      - name: Deploy (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo wget -O /tmp/cqtdeployer.deb https://github.com/QuasarApp/CQtDeployer/releases/download/v1.6.2351/CQtDeployer_1.6.2351.ec4840f_Linux_x86_64.deb
          sudo dpkg -i /tmp/cqtdeployer.deb
          cqtdeployer -bin ${{ github.workspace }}/build/SnakeQT qif -targetDir InstallerDistributionKit
        shell: bash

      - uses: actions/upload-artifact@v3
        if: runner.os == 'Linux'
        with:
          name: Linux_Installer
          path: InstallerDistributionKit/*

      - name: Deploy (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install cqtdeployer
          cqtdeployer -bin ${{ github.workspace }}/build/SnakeQT -targetDir FileDistributionKit
        shell: pwsh

      - uses: actions/upload-artifact@v3
        if: runner.os == 'Windows'
        with:
          name: Windows_Files
          path: FileDistributionKit/*

      - name: Deploy (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install cqtdeployer
          cqtdeployer -bin ${{ github.workspace }}/build/SnakeQT qif -targetDir InstallerDistributionKit
        shell: pwsh

      - uses: actions/upload-artifact@v3
        if: runner.os == 'Windows'
        with:
          name: Windows_Files
          path: InstallerDistributionKit/*
